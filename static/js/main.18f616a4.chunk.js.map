{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Loader.js","components/Scroll.js","components/ErrorBoundry.js","components/NothingFound.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","id","alt","style","width","name","email","CardList","robots","map","robot","index","SearchBox","searchChange","maxWidth","type","placeholder","onChange","Loader","loading","role","Scroll","height","overflowY","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","NothingFound","found","length","App","onSearchChange","e","searchField","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18f616a4.chunk.js","sourcesContent":["import React from 'react'\n\nconst Card = (props) => {\n  return (\n    <div className='col-lg-3 col-md-4 col-sm-6'>\n      <div className='card shadow'>\n        <div className='card-body'>\n          <img src={`https://robohash.org/${props.id}?200x200`} alt='robot' style={{width: '100%'}} className='mb-3' />\n          <div className='text-center'>\n            <h4>{props.name}</h4>\n            <p>{props.email}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card","import React from 'react'\nimport Card from './Card'\n\nconst CardList = ({robots}) => {\n  return (\n    <div className='grid'>\n      <div className='row g-3 pb-5'>\n      {\n        robots.map((robot, index) => {\n          return(\n            <Card\n              id={robots[index].id}\n              name={robots[index].name}\n              email={robots[index].email}\n              key={robots[index].id}\n            />\n          )\n        })\n      }\n      </div>\n    </div> \n  )\n}\n\nexport default CardList","import React from 'react'\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <form className=\"mb-5 mx-auto\" style={{ maxWidth: 200 }}>\n      <input type='Search' placeholder='Search Robots' className='form-control me-3' onChange={searchChange} />\n    </form>\n  )\n}\n\nexport default SearchBox","import React from 'react'\n\nconst Loader = ({ loading }) => {\n  return loading ?\n    (\n      <div className=\"d-flex justify-content-center\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n    ) :\n  \n    (\n      <span></span>\n    )\n}\n\nexport default Loader\n\n// I used tenary operation here instead of the normal if/else statement","import React from 'react'\n\nconst Scroll = (props) => {\n  return (\n    <div style={{ height: '500px', overflowY: 'scroll' }}>\n      { props.children }\n    </div>\n  )\n} \n\nexport default Scroll","import React, { Component } from 'react'\n\nclass ErrorBoundry extends Component {\n  constructor (props) {\n    super (props)\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch (error, info) {\n    this.setState({ hasError: true })\n  }\n\n  render () {\n    if (this.state.hasError) {\n       return (\n         <div className=\"text-center\">\n           <h1 className=\"text-danger\">Ooops! That is not good</h1>\n         </div>\n       )\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundry","import React from 'react'\n\nconst NothingFound = ({ found, robots }) => {\n  if (robots.length > 0) {\n    if (found < 1) {\n      return (\n        <div className='text-center'>\n          <h3 className='text-white'>Nothing Found</h3>\n        </div>\n      )\n    }\n  }\n  return <span></span>\n}\n\nexport default NothingFound","import React, { Component } from 'react'\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox'\nimport Loader from '../components/Loader'\nimport Scroll from '../components/Scroll'\nimport ErrorBoundry from '../components/ErrorBoundry'\nimport NothingFound from '../components/NothingFound'\n\nclass App extends Component {\n  constructor () {\n    super()\n    this.state = {\n      robots: [],\n      searchField: '',\n      loading: false\n    }\n  }\n\n  componentDidMount () {\n    this.setState({ loading: true })\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => {\n      return response.json()\n    })\n    .then(users => {\n      this.setState({ robots: users })\n      this.setState({ loading: false })\n    })\n  }\n\n  onSearchChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render () {\n    const { robots, searchField } = this.state\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase())\n    })\n\n    return (\n      <div>\n        <h1 className='text-center mt-5 mb-3 text-white h1'>Robo Friends</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          <div className='container'>\n            <NothingFound found={filteredRobots} robots={this.state.robots} />\n            <ErrorBoundry>\n              <Loader loading = { this.state.loading } />\n              <CardList robots={filteredRobots} />\n            </ErrorBoundry>\n          </div>\n        </Scroll>\n      </div>\n    )\n  }\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap/dist/js/bootstrap.bundle.min'\nimport 'bootstrap-icons/font/bootstrap-icons'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}